filter(les.epi == "normal" | les.epi == "lesion non epileptogene")%>%
filter(res.IRM != "aucun" & res.IRM != "aucun mais propose"))
N_pat_all_normal_suspicious_les <- nrow(data_full_cleaned%>%filter(res.1st.EEG != "aucun" & res.1st.EEG != "aucun mais propose")%>%
filter(EEG.result_resume == "slow" | is.na(EEG.result_resume))%>%
filter(res.lt.EEG != "aucun" & res.lt.EEG != "aucun mais propose")%>%
filter(EEG.lt.result_resume == "slow" | is.na(EEG.lt.result_resume))%>%
filter(res.IRM != "aucun" & res.IRM != "aucun mais propose")%>%
filter(les.epi != "lesion epileptogene")%>%
select(pointes.1st.EEG, pointes.lt.EEG, res.IRM, les.epi)%>%
filter(les.epi == "douteux"))
# N patients epileptic among these patients
N_pat_all_normal_epi <- nrow(data_full_cleaned%>%
filter(pointes.1st.EEG != "focale" & pointes.1st.EEG != "diffuse" & res.1st.EEG != "aucun" & res.1st.EEG != "aucun mais propose")%>%
filter(pointes.lt.EEG != "focale" & pointes.lt.EEG != "diffuse" & res.lt.EEG != "aucun" & res.lt.EEG != "aucun mais propose")%>%
filter(les.epi == "normal" | les.epi == "lesion non epileptogene")%>%
filter(res.IRM != "aucun" & res.IRM != "aucun mais propose")%>%
filter(dx.event == "Epilepsy"))
# Same but only with routine EEG and MRI
N_pat_all_normal_epi_lt_mri <- nrow(data_full_cleaned%>%
filter(res.1st.EEG != "aucun" & res.1st.EEG != "aucun mais propose")%>%
filter(pointes.lt.EEG != "focale" & pointes.lt.EEG != "diffuse" & res.lt.EEG != "aucun" & res.lt.EEG != "aucun mais propose")%>%
filter(les.epi == "normal" | les.epi == "lesion non epileptogene")%>%
filter(res.IRM != "aucun" & res.IRM != "aucun mais propose")%>%
filter(dx.event == "Epilepsy"))
missed_patients <- nrow(data_full_cleaned%>%
filter(res.1st.EEG != "normal" | EEG.result_resume == "slow")%>%
filter(res.IRM != "aucun" & res.IRM != "aucun mais propose")%>%
filter(les.epi != "lesion epileptogene")%>%
filter(EEG.lt.result_resume == "pointes" | EEG.lt.result_resume == "pointes+slow"))
# What to consider as a relapse ? Here everything except acute seizures
# pas de ttt
#ttt ok et bonne compliance
#Probleme de compliance
#ttt ok taux infra ou ttt inadequat
#crise provoquee
data_relapse <- data_full_cleaned%>%
select(code.pat, dx.event, dx.epi, type.epi.final, n.tot.recidives, motif_relapse, detail_relapse)%>%
mutate(dx.dicho = ifelse(dx.event != "Epilepsy" | is.na(dx.event), "Non epileptic", "Epileptic"),
relapses = case_when(n.tot.recidives == 0 ~ "No relapse",
dx.dicho == "Non epileptic" & n.tot.recidives > 0 ~ "Relapse",
detail_relapse == "pas de ttt" ~ "Relapse",
detail_relapse == "ttt ok et bonne compliance" ~ "Relapse",
detail_relapse == "Probleme de compliance" ~ "Relapse",
detail_relapse == "ttt ok taux infra ou ttt inadequat" ~ "Relapse",
motif_relapse == "pas de recidives trouvees" ~ "No relapse",
TRUE ~ "No relapse"))%>%
select(code.pat, dx.event, dx.epi, type.epi.final, relapses, detail_relapse, dx.dicho)
# Table of the relapse rate per diagnostis
relapse_table <- data_relapse%>%
group_by(dx.event, dx.epi, type.epi.final, relapses)%>%
summarise(N = n())%>%
mutate()%>%
spread(key = relapses, value = N)%>%
mutate(percentage = pct.fun(Relapse, sum(`No relapse`, Relapse)),
pct_n = pct.fun_n(Relapse, sum(`No relapse`, Relapse)))
# N and % of acutes symptomatic seizures as relapse
N_acute_relapses <- nrow(data_relapse%>%
filter(detail_relapse == "crise provoquee"))
pct_acute_relapses <- pct.fun(N_acute_relapses, nrow(data_full_cleaned%>%filter(dx.event == "Epilepsy")))
# General relapse rate among all patients
N_relapses_total <- nrow(data_relapse%>%filter(relapses == "Relapse"))
# N and % of relapse among epileptic patients
N_relapses_epi <- nrow(data_relapse%>%filter(dx.event == "Epilepsy", relapses == "Relapse"))
pct_relapses_epi <- pct.fun(N_relapses_epi, nrow(data_relapse%>%filter(dx.event == "Epilepsy")))
# N and % of relapse among non-epileptic patients
N_relapses_non_epi <- nrow(data_relapse%>%
filter(dx.event != "Epilepsy" | is.na(dx.event))%>%
filter(relapses == "Relapse"))
N_non_epi <- nrow(data_relapse%>%
filter(dx.event != "Epilepsy" | is.na(dx.event)))
pct_relapses_non_epi <- pct.fun(N_relapses_non_epi, N_non_epi)
# Chisq between the two
N_no_relapse_epi <- nrow(data_relapse%>%filter(dx.event == "Epilepsy", relapses == "No relapse"))
N_no_relapse_non_epi <-  nrow(data_relapse%>%
filter(dx.event != "Epilepsy" | is.na(dx.event))%>%
filter(relapses == "No relapse"))
epi_rel_no_rel <- c(N_relapses_epi, N_no_relapse_epi)
non_epi_rel_no_rel <- c(N_relapses_non_epi, N_no_relapse_non_epi)
chi_data <- data.frame(epi_rel_no_rel, non_epi_rel_no_rel)
result_chi_epi_non_epi <- chisq.test(chi_data)
# N and % of relapse in focal epilepsy patients vs. generalized
# Focal
N_relapses_focal <- nrow(data_relapse%>%filter(dx.epi == "Focal epilepsy", relapses == "Relapse"))
N_focal <- nrow(data_relapse%>%filter(dx.epi == "Focal epilepsy"))
pct_relapses_focal <- pct.fun(N_relapses_focal, N_focal)
# Generalized
N_relapses_generalized <- nrow(data_relapse%>%filter(dx.epi == "Primary generalized epilepsy", relapses == "Relapse"))
N_generalized <- nrow(data_relapse%>%filter(dx.epi == "Primary generalized epilepsy"))
pct_relapses_generalized <- pct.fun(N_relapses_generalized, N_generalized)
# Chisq on the relapse rate between focal and generalized
N_no_relapses_focal <- nrow(data_relapse%>%filter(dx.epi == "Focal epilepsy", relapses == "No relapse"))
N_no_relapses_generalized <- nrow(data_relapse%>%filter(dx.epi == "Primary generalized epilepsy", relapses == "No relapse"))
focal_rel_no_rel <- c(N_relapses_focal, N_no_relapses_focal)
gener_rel_no_rel <- c(N_relapses_generalized, N_no_relapses_generalized)
data_chi <- data.frame(focal_rel_no_rel, gener_rel_no_rel)
res_chi_focal_gen <- chisq.test(data_chi)
# N and % of relapses in lesional vs. non-lesional epilepsy
N_relapses_les <- nrow(data_relapse%>%filter(type.epi.final == "lesionnelle", relapses == "Relapse"))
N_les <- nrow(data_relapse%>%filter(type.epi.final == "lesionnelle"))
pct_relapses_les <- pct.fun(N_relapses_les, N_les)
N_relapses_non_les <- nrow(data_relapse%>%filter(type.epi.final == "non lesionnelle", relapses == "Relapse"))
N_non_les <- nrow(data_relapse%>%filter(type.epi.final == "non lesionnelle"))
pct_relapses_non_les <- pct.fun(N_relapses_non_les, N_non_les)
# Chisq on the relapse rate between lesional vs. non-lesional patients
N_non_relapses_les <- N_les - N_relapses_les
N_non_relapses_non_les <- N_non_les - N_relapses_non_les
les_rel_no_rel <- c(N_relapses_les, N_non_relapses_les)
non_les_rel_no_rel <- c(N_relapses_non_les, N_non_relapses_non_les)
data_chi <- data.frame(les_rel_no_rel, non_les_rel_no_rel)
res_chi_les_non_les <- chisq.test(data_chi)
# Cardiac RR vs. the other groups of non-epileptic patients
N_relapses_cardiac <- nrow(data_relapse%>%filter(dx.event == "Cardiac", relapses == "Relapse"))
N_cardiac <- nrow(data_relapse%>%filter(dx.event == "Cardiac"))
pct_relapses_cardiac <- pct.fun(N_relapses_cardiac, N_cardiac)
data_cardiac_relapse <- relapse_table%>%
mutate(cardiac.dicho = case_when(dx.event == "Cardiac" ~ "Cardiac",
TRUE ~ "non cardiac"),
cardiac.dicho = ifelse(dx.event == "Epilepsy", NA, cardiac.dicho),
cardiac.dicho = ifelse(is.na(dx.event), "non cardiac", cardiac.dicho))
data_cardiac_relapse <- as.data.frame(data_cardiac_relapse)
N_relapses_non_cardiac <- data_cardiac_relapse%>%filter(cardiac.dicho == "non cardiac")%>%
summarise(total = sum(Relapse))
N_relapses_non_cardiac <-  N_relapses_non_cardiac$total[1]
N_non_cardiac <- data_cardiac_relapse%>%filter(cardiac.dicho == "non cardiac")%>%
summarise(total = sum(Relapse, `No relapse`))
data_cardiac_relapse <- as.data.frame(data_cardiac_relapse)
# Chisq between cardiac and non-cardiac diagnoses
N_non_relapses_non_cardiac <- as.data.frame(data_cardiac_relapse%>%filter(cardiac.dicho == "non cardiac")%>%summarise(total = sum(`No relapse`)))
N_non_relapses_non_cardiac <- N_non_relapses_non_cardiac$total
N_non_relapses_cardiac <- N_cardiac - N_relapses_cardiac
cardiac_rel_no_rel <- c(N_relapses_cardiac, N_non_relapses_cardiac)
non_cardiac_rel_no_rel <- c(N_relapses_non_cardiac, N_non_relapses_non_cardiac)
data_chi <- data.frame(cardiac_rel_no_rel, non_cardiac_rel_no_rel)
res_chi_cardiac <- chisq.test(data_chi)
table_5 <- relapse_table
# Table of the reason of relapse among the epileptic patients
N_epi <- nrow(data_full_cleaned%>%filter(dx.event == "Epilepsy"))
type_relapse_table <- data_full_cleaned%>%
filter(dx.event == "Epilepsy")%>%
group_by(detail_relapse)%>%
summarise(N = n(),
PCT = pct.fun_n(N, N_epi))%>%
mutate(detail_relapse = case_when(detail_relapse == "crise provoquee" ~ "Acute symptomatic seizure",
detail_relapse == "pas de ttt" ~ "No treatment",
detail_relapse == "Probleme de compliance" ~ "Compliance problem",
detail_relapse == "ttt ok et bonne compliance" ~ "Adequate treatment and good compliance",
detail_relapse == "ttt ok taux infra ou ttt inadequat" ~ "Infra-therapeutic drug-level or suboptimal treatment ",
is.na(detail_relapse) ~ "no relapse"))
# Acute relapses
N_acute <- 4
OH <- 2
sevr_ttt <- 2
pct_not_first_event
# Not the first event
tot_pat <- nrow(data_full_cleaned%>%filter(!is.na(code.pat)))
N_not_first_event <- nrow(data_full_cleaned%>%filter(SBB.1 > 1))
pct_not_first_event <- pct.fun(nrow(data_full_cleaned%>%filter(SBB.1 > 1)), nrow(data_full_cleaned%>%filter(!is.na(code.pat))))
# N patients admited in the ED
N_pat_adm_ED <- nrow(data_full_cleaned%>%filter(!is.na(date.1st.cs.su)))
pct_pat_adm_ED <- pct.fun(nrow(data_full_cleaned%>%filter(!is.na(date.1st.cs.su))), nrow(data_full_cleaned%>%filter(!is.na(code.pat))))
pct_not_first_event
N_not_first_event
tot_pat
kable(model_age)
kable(as.dat.frame(anova(model_age)))
kable(as.data.frame(anova(model_age)))
data_full_cleaned%>%
group_by(ATCD_specific)%>%
summarise(N = n())%>%
mutate( ATCD_specific = case_when(ATCD_specific == 'aucun' ~ 'No comorbidities',
ATCD_specific == 'autres' ~ 'Other',
ATCD_specific == 'cardiaque' ~ 'Cardiac',
ATCD_specific == 'neurologique' ~ 'Neurologic',
ATCD_specific == 'psychiatrique' ~ 'Psychiatric'))
data_full_cleaned%>%
group_by(ATCD_specific)%>%
summarise(N = n())%>%
mutate( ATCD_specific = case_when(ATCD_specific == 'aucun' ~ 'No comorbidities',
ATCD_specific == 'autres' ~ 'Other',
ATCD_specific == 'cardiaque' ~ 'Cardiac',
ATCD_specific == 'neurologique' ~ 'Neurologic',
ATCD_specific == 'psychiatrique' ~ 'Psychiatric'))
336+42+44+301+53
336+42+44+301+53+235
data_full_cleaned%>%
filter(!is.na(ATCD_specific))%>%
mutate(dicho_atcd = ifelse(ATCD_specific == "aucun", "none", "comorbidities"))%>%
select(code.pat, age, dicho_atcd)
data_full_cleaned%>%
filter(!is.na(ATCD_specific))%>%
mutate(dicho_atcd = ifelse(ATCD_specific == "aucun", "none", "comorbidities"))%>%
select(code.pat, age, dicho_atcd)
data_atcd_age <- data_full_cleaned%>%
filter(!is.na(ATCD_specific))%>%
mutate(dicho_atcd = ifelse(ATCD_specific == "aucun", "none", "comorbidities"))%>%
select(code.pat, age, dicho_atcd)
lm(age ~ dicho_atcd, data = data_atcd_age)
ttest_age <- lm(age ~ dicho_atcd, data = data_atcd_age)
anova(ttest_age)
data_atcd_age%>%
group_by(dicho_atcd)%>%
summarise(mean_age = mean(age),
sd_age = sd(age))
data_atcd_age%>%
group_by(dicho_atcd)%>%
summarise(mean_age = mean(age),
sd_age = sd(age))
report_results(ttest_age, "anova")
report_results(ttest_age, "mainef_anova")
report_results(ttest_age, "mainef_anova")
report_results(ttest_age, "mainef_anova")[1]
report_results(ttest_age, "mainef_anova")[1]
report_results(ttest_age, "mainef_anova")[1,]
report_results(ttest_age, "mainef_anova")[1,]
res_ttest_age <- report_results(ttest_age, "mainef_anova")[1,]
res_ttest_age
report_results(ttest_age, "mainef_anova")[1,1]
report_results(ttest_age, "mainef_anova")[1,2]
res_ttest_age <- report_results(ttest_age, "mainef_anova")[1,2]
res_ttest_age
desc_age_atcd <- data_atcd_age%>%
group_by(dicho_atcd)%>%
summarise(mean_age = mean(age),
sd_age = sd(age))
desc_age_atcd
desc_age_atcd
desc_age_atcd$mean_age[1]
round(desc_age_atcd$mean_age[1],2)
round(desc_age_atcd$mean_age[1],2)
round(desc_age_atcd$sd_age[1],2)
round(desc_age_atcd$mean_age[2],2)
round(desc_age_atcd$sd_age[2],2)
res_ttest_age
data_full_cleaned%>%
group_by(dx.epi, type.epi.final)%>%
summarise(N = n(),
mean_age = mean(age, na.rm = T),
sd_age = sd(age, na.rm = T))
data_full_cleaned%>%
group_by(dx.epi, type.epi.final)%>%
summarise(N = n(),
mean_age = mean(age, na.rm = T),
sd_age = sd(age, na.rm = T))
384+60
384+60+31
dx_epi$N[1]
pct.fun(dx_epi$N[1], sum(N_epi_dx$N[1:3])
)
sum(N_epi_dx$N[1:3])
ATCD
ATCD
dx_event_desc
dx_event_desc
round(dx_event_desc$sd[dx_event_desc$dx.event == "Cardiovascular"][1],2)
round(dx_event_desc$sd[dx_event_desc$dx.event == "Cardiac"][1],2)
pct.fun(dx_event_desc$N[dx_event_desc$dx.event == "Vaso-vagal and orthostatic syncopes"][1], tot_pat)
tot_pat
dx_event_desc$N[dx_event_desc$dx.event == "Vaso-vagal and orthostatic syncopes"][1]
data_full_cleaned%>%
filter(dx.event == "Cardiovascular")%>%
group_by(type.cardiovasculaire)%>%
summarise(N = n())%>%
mutate(type.cardiovasculaire = case_when(type.cardiovasculaire == "ACR" ~ "Cardiac arrest",
type.cardiovasculaire == "AIT" ~ "Transient ischemic attack",
type.cardiovasculaire == "AVC" ~ "Stroke",
type.cardiovasculaire == "multifactoriel" ~ "Multifactorial",
type.cardiovasculaire == "symptomes post-AVC" ~ "Post-stroke symptoms",
type.cardiovasculaire == "syncope" ~ "Syncope"))
data_full_cleaned%>%
filter(dx.event == "Cardiovascular")%>%
group_by(type.cardiovasculaire)%>%
summarise(N = n())%>%
mutate(type.cardiovasculaire = case_when(type.cardiovasculaire == "ACR" ~ "Cardiac arrest",
type.cardiovasculaire == "AIT" ~ "Transient ischemic attack",
type.cardiovasculaire == "AVC" ~ "Stroke",
type.cardiovasculaire == "multifactoriel" ~ "Multifactorial",
type.cardiovasculaire == "symptomes post-AVC" ~ "Post-stroke symptoms",
type.cardiovasculaire == "syncope" ~ "Syncope"))
table_3 <- data_full_cleaned%>%
filter(dx.event == "Cardiovascular")%>%
group_by(type.cardiovasculaire)%>%
summarise(N = n())%>%
mutate(type.cardiovasculaire = case_when(type.cardiovasculaire == "ACR" ~ "Cardiac arrest",
type.cardiovasculaire == "AIT" ~ "Transient ischemic attack",
type.cardiovasculaire == "AVC" ~ "Stroke",
type.cardiovasculaire == "multifactoriel" ~ "Multifactorial",
type.cardiovasculaire == "symptomes post-AVC" ~ "Post-stroke symptoms",
type.cardiovasculaire == "syncope" ~ "Syncope"))
kable(table_3)
N_EEG_slow
EEG_24_48
EEG_24
N_tot_EEG_time
N_EEG
number_to_word(nrow(not_epi_spikes[not_epi_spikes$res.lt.EEG == "aucun",]))
umber_to_word(nrow(not_epi_spikes[not_epi_spikes$res.lt.EEG == "normal",]))
number_to_word(nrow(not_epi_spikes[not_epi_spikes$res.lt.EEG == "normal",]))
number_to_word(N_spikes_not_epi)
number_to_word(nrow(not_epi_spikes[not_epi_spikes$res.lt.EEG == "anormal",]))
N_spikes_LTEEG_epi
number_to_word(N_spikes_LTEEG - N_spikes_LTEEG_epi)
yield_LT_EEG
N_pat_all_normal
type_relapse_table$N[type_relapse_table == "No treatment"]
type_relapse_table$N[type_relapse_table == "Compliance problem"]
type_relapse_table$N[type_relapse_table == "Compliance problem"]
data_full_cleaned%>%
mutate(more_1_event = ifelse(SBB.1 > 1, "many", "one"))%>%
mutate(dx_paste = ifelse(dx.event == "Epilepsy", paste(dx.event, type.epi.final),dx.event))
select(code.pat, age, dx.event, dx.epi,  more_1_event, dx_paste, genre, les.epi)
table_1
table_1
View(table_1)
library(writexl)
write_xlsx(table_1, "table1.xlsx")
View(data_atcd_age)
table_2
library(dplyr)
table_2%>%
mutate(N_PCT = paste(N, "(", PCT,")"))
table_2%>%
mutate(N_PCT = paste0(N, " (", PCT,")"))
table_2 <- table_2%>%
mutate(N_PCT = paste0(N, " (", PCT,")"))
write_xlsx(table_2, "table_2.xlsx")
table_3
table_5
table_5%>%
mutate(dx.event = ifelse(dx.event == "Epilepsy", paste0(dx.epi, " ", type.epi.final, " ", dx.event)))
table_5 <- as.data.frame(table_5)
table_5%>%
mutate(dx.event = ifelse(dx.event == "Epilepsy", paste0(dx.epi, " ", type.epi.final, " ", dx.event)))
table_5%>%
mutate(dx.event = ifelse(dx.event == "Epilepsy", paste0(dx.epi, " ", type.epi.final, " ", dx.event), dx.event))
table_5%>%
mutate(dx.event = ifelse(dx.event == "Epilepsy", paste0(dx.epi, " ", type.epi.final, " ", dx.event), dx.event))
table_5
table_5 <- relapse_table
table_5
pct.fun(12,42)
table_5%>%
mutate(Relapse = paste0(Relapse, " (", percentage,")"))
table_5%>%
mutate(Relapse = paste0(Relapse, " (", percentage,")"),)
table_5%>%
mutate(Relapse = paste0(Relapse, " (", percentage,")"),
`No relapse` = paste0(`No relapse`, " (", (100-pct_n), "%)"))
table_5 <- table_5%>%
mutate(Relapse = paste0(Relapse, " (", percentage,")"),
`No relapse` = paste0(`No relapse`, " (", (100-pct_n), "%)"))
write_xlsx(table_5)
write_xlsx(table_5, "table_5.xlsx")
data_reg_log <- data_full_cleaned%>%
mutate(dx.dicho = ifelse(dx.event != "Epilepsy" | is.na(dx.event), "non-epileptic", "epileptic"),
EEG = case_when(!is.na(EEG.result_resume) ~ EEG.result_resume,
res.1st.EEG == "aucun" | res.1st.EEG == "aucun mais propose" ~ "aucun",
TRUE ~ "normal"),
les.epi = ifelse(les.epi == "aucun", NA, les.epi),
status.neuro = ifelse(status.neuro == "aucun" | status.neuro == "aucun mais propose", NA, status.neuro),
veille.sommeil = ifelse(veille.sommeil == "non documente", NA, veille.sommeil),
EEG = ifelse(EEG == "aucun", NA, EEG),
atcd.famille = ifelse(atcd.famille == "aucun/autre", "aucun", atcd.famille),
dx.dicho = as.factor(dx.dicho),
genre = as.factor(genre),
atcd.famille = as.factor(atcd.famille),
EEG = as.factor(EEG),
les.epi = as.factor(les.epi),
status.neuro = as.factor(status.neuro),
veille.sommeil = as.factor(veille.sommeil))%>%
select(code.pat, dx.dicho, age, genre, atcd.famille, EEG, les.epi, status.neuro, veille.sommeil)
mod_log <- glm(dx.dicho ~ age + genre + atcd.famille + EEG + les.epi + status.neuro + veille.sommeil, family = "binomial", data = data_reg_log)
Anova_reg_log <- as.data.frame(Anova(mod_log))
library(car)
data_reg_log <- data_full_cleaned%>%
mutate(dx.dicho = ifelse(dx.event != "Epilepsy" | is.na(dx.event), "non-epileptic", "epileptic"),
EEG = case_when(!is.na(EEG.result_resume) ~ EEG.result_resume,
res.1st.EEG == "aucun" | res.1st.EEG == "aucun mais propose" ~ "aucun",
TRUE ~ "normal"),
les.epi = ifelse(les.epi == "aucun", NA, les.epi),
status.neuro = ifelse(status.neuro == "aucun" | status.neuro == "aucun mais propose", NA, status.neuro),
veille.sommeil = ifelse(veille.sommeil == "non documente", NA, veille.sommeil),
EEG = ifelse(EEG == "aucun", NA, EEG),
atcd.famille = ifelse(atcd.famille == "aucun/autre", "aucun", atcd.famille),
dx.dicho = as.factor(dx.dicho),
genre = as.factor(genre),
atcd.famille = as.factor(atcd.famille),
EEG = as.factor(EEG),
les.epi = as.factor(les.epi),
status.neuro = as.factor(status.neuro),
veille.sommeil = as.factor(veille.sommeil))%>%
select(code.pat, dx.dicho, age, genre, atcd.famille, EEG, les.epi, status.neuro, veille.sommeil)
mod_log <- glm(dx.dicho ~ age + genre + atcd.famille + EEG + les.epi + status.neuro + veille.sommeil, family = "binomial", data = data_reg_log)
Anova_reg_log <- as.data.frame(Anova(mod_log))
anova_reg_log <- as.data.frame(anova(mod_log))
anova_reg_log <- anova_reg_log[2:nrow(anova_reg_log),]
res_reg_log <- cbind(anova_reg_log, Anova_reg_log)
res_reg_log <- res_reg_log[,-6]
res_reg_log$Predictor <- row.names(res_reg_log)
res_reg_log <- res_reg_log%>%
arrange(desc(Deviance))%>%
mutate(Deviance = round(Deviance, 2),
`Resid. Dev` = round(`Resid. Dev`,2),
`LR Chisq` = round(`LR Chisq`,2),
`Pr(>Chisq)` = round(`Pr(>Chisq)`, 3),
`Pr(>Chisq)` = ifelse(`Pr(>Chisq)` < 0.001, "<0.001", `Pr(>Chisq)`))%>%
select(Predictor, Df, Deviance, `Resid. Df`, `Resid. Dev`, `LR Chisq`, `Pr(>Chisq)`)
data_LT_over_std <- data_full_cleaned%>%
mutate(dx.dicho = ifelse(dx.event != "Epilepsy" | is.na(dx.event), "non-epileptic", "epileptic"),
EEG = case_when(!is.na(EEG.result_resume) ~ EEG.result_resume,
res.1st.EEG == "aucun" | res.1st.EEG == "aucun mais propose" ~ "aucun",
TRUE ~ "normal"),
les.epi = ifelse(les.epi == "aucun", NA, les.epi),
status.neuro = ifelse(status.neuro == "aucun" | status.neuro == "aucun mais propose", NA, status.neuro),
veille.sommeil = ifelse(veille.sommeil == "non documente", NA, veille.sommeil),
EEG = ifelse(EEG == "aucun", NA, EEG),
atcd.famille = ifelse(atcd.famille == "aucun/autre", "aucun", atcd.famille),
EEG_LT = case_when(!is.na(EEG.lt.result_resume) ~ EEG.lt.result_resume,
res.lt.EEG == "aucun" | res.lt.EEG == "aucun mais propose" ~ "aucun",
TRUE ~ "normal"),
dx.dicho = as.factor(dx.dicho),
genre = as.factor(genre),
atcd.famille = as.factor(atcd.famille),
EEG = as.factor(EEG),
les.epi = as.factor(les.epi),
status.neuro = as.factor(status.neuro),
veille.sommeil = as.factor(veille.sommeil))%>%
filter(res.lt.EEG != "aucun", res.lt.EEG != "aucun mais propose")%>%
select(code.pat, dx.dicho, EEG_LT, age, genre, atcd.famille, EEG, les.epi, status.neuro, veille.sommeil)
# Logistic regression model with the LT EEG information
mod_w_LT <- glm(dx.dicho ~ EEG_LT + age + genre + atcd.famille + EEG + les.epi + status.neuro + veille.sommeil, family = "binomial", data = data_LT_over_std)
# Results table
Anova_reg_log_LT <- as.data.frame(Anova(mod_w_LT))
anova_reg_log_LT <- as.data.frame(anova(mod_w_LT))
anova_reg_log_LT <- anova_reg_log_LT[2:nrow(anova_reg_log_LT),]
res_reg_log_LT <- cbind(anova_reg_log_LT, Anova_reg_log_LT)
res_reg_log_LT <- res_reg_log_LT[,-6]
res_reg_log_LT$Predictor <- row.names(res_reg_log_LT)
res_reg_log_LT <- res_reg_log_LT%>%
arrange(desc(Deviance))%>%
mutate(Deviance = round(Deviance, 2),
`Resid. Dev` = round(`Resid. Dev`,2),
`LR Chisq` = round(`LR Chisq`,2),
`Pr(>Chisq)` = round(`Pr(>Chisq)`, 3),
`Pr(>Chisq)` = ifelse(`Pr(>Chisq)` < 0.001, "<0.001", `Pr(>Chisq)`))%>%
select(Predictor, Df, Deviance, `Resid. Df`, `Resid. Dev`, `LR Chisq`, `Pr(>Chisq)`)
res_reg_log
table_6 <- res_reg_log
table_6
write_xlsx(table_6, "table_6.xlsx")
table_7 <- res_reg_log_LT
write_xlsx(table_7, "table_7.xlsx")
library(dplyr)
library(ggplot2)
library(tidyr)
library(writexl)
library(emmeans)
library(tidyr)
library(lubridate)
library(car)
library(knitr)
library(randomForest)
library(ROCR)
library(NPL) # from https://github.com/EricMenetre/NPL -> Follow instruction on the README regarding installation
library(survival)
library(survminer)
library(car)
data_full_cleaned%>%
dplyr::mutate(alive = ifelse(!is.na(date.deces) | !is.na(cause.deces), "dead", "alive"),
dx.dicho = ifelse(dx.event == "Epilepsy", "epi", "non-epi"),
dx.dicho = ifelse(is.na(dx.dicho), "non-epi", dx.dicho))%>%
dplyr::group_by(alive)%>%
dplyr::summarise(N = n(),
mean_age = round(mean(age),2),
sd_age = round(sd(age),2))
data_full_cleaned%>%
dplyr::mutate(alive = ifelse(!is.na(date.deces) | !is.na(cause.deces), "dead", "alive"),
dx.dicho = ifelse(dx.event == "Epilepsy", "epi", "non-epi"),
dx.dicho = ifelse(is.na(dx.dicho), "non-epi", dx.dicho))%>%
dplyr::group_by(alive)%>%
dplyr::summarise(N = n(),
mean_age = round(mean(age),2),
sd_age = round(sd(age),2))
data_dead$N[2]
data_full_cleaned%>%
group_by(resident)%>%
summarise(N = n())
data_full_cleaned%>%
group_by(resident)%>%
summarise(N = n())
data_resid <- data_full_cleaned%>%
group_by(resident)%>%
summarise(N = n())
data_resid$N[1]
data_full_cleaned%>%
filter(SBB.3 == 3 | SBB.3 == 8)
data_full_cleaned%>%
filter(SBB.3 == 3 | SBB.3 == 8)
data_full_cleaned%>%
filter(SBB.3 == 3 | SBB.3 == 8)%>%
filter(resident == TRUE)%>%
filter(is.na(date.deces))
other_lost <- data_full_cleaned%>%
filter(SBB.3 == 3 | SBB.3 == 8)%>%
filter(resident == TRUE)%>%
filter(is.na(date.deces))
other_lost <- nrow(data_full_cleaned%>%
filter(SBB.3 == 3 | SBB.3 == 8)%>%
filter(resident == TRUE)%>%
filter(is.na(date.deces)))
other_lost
data_dead$N[2]+data_resid$N[1]+other_lost
tot_lost <- data_dead$N[2]+data_resid$N[1]+other_lost

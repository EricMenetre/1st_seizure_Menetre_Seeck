"0","# Libraries "
"0",""
"0","library(dplyr)"
"2","
Attachement du package : ‘dplyr’

"
"2","The following objects are masked from ‘package:stats’:

    filter, lag

"
"2","The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

"
"0","library(ggplot2)"
"0","library(tidyr)"
"0","library(writexl)"
"0","library(emmeans)"
"0","library(tidyr)"
"0","library(lubridate)"
"2","
Attachement du package : ‘lubridate’

"
"2","The following object is masked from ‘package:base’:

    date

"
"0","library(car)"
"2","Le chargement a nécessité le package : carData
"
"2","Registered S3 method overwritten by 'data.table':
  method           from
  print.data.table     
"
"2","
Attachement du package : ‘car’

"
"2","The following object is masked from ‘package:dplyr’:

    recode

"
"0","library(knitr)"
"0","library(randomForest)"
"2","randomForest 4.6-14
"
"2","Type rfNews() to see new features/changes/bug fixes.
"
"2","
Attachement du package : ‘randomForest’

"
"2","The following object is masked from ‘package:ggplot2’:

    margin

"
"2","The following object is masked from ‘package:dplyr’:

    combine

"
"0","library(ROCR)"
"0","library(NPL) # from https://github.com/EricMenetre/NPL -> Follow instruction on the README regarding installation"
"2","
Attachement du package : ‘NPL’

"
"2","The following object is masked _by_ ‘.GlobalEnv’:

    number_to_word

"
"0","# functions"
"0",""
"0","## Function to calculate percentages"
"0","pct.fun <- function(sub_sample, full_sample) {"
"0","  pct <- round((sub_sample * 100)/full_sample,2)"
"0","  return(paste(pct,""%"", sep = """"))"
"0","}"
"0","pct.fun_n <- function(sub_sample, full_sample) {"
"0","  pct <- round((sub_sample * 100)/full_sample,2)"
"0","  return(pct)"
"0","}"
"0",""
"0","# Function to create an output to report results from an lm model in the text"
"0","report_mainef_lm <- function(model){"
"0","  anova_table <- anova(model)"
"0","  "
"0","  effects <- paste(""F("", anova_table$Df,"") = "", round(anova_table$`F value`,2), "" p = "", sep = """")"
"0","  names_eff <- rownames(anova_table)"
"0","  output <- data.frame(names_eff, effects)"
"0","  output$p <- round(anova_table$`Pr(>F)`,3)"
"0","  output$p <- ifelse(output$p == 0.000, ""<0.001"", output$p)"
"0","  output <-output[1:(nrow(output)-1),]"
"0","  output$effects <- paste(output$effects, output$p, sep = """")"
"0","  output$p <- NULL"
"0","  return(output)"
"0","}"
"0",""
"0","# Function to create a text output for a chi2 model"
"0","report_chi <- function(chi_model){"
"0","  if(chi_model$p.value < 0.001){"
"0","    return(paste(""X2 = "",round(chi_model$statistic,2), ""; p<0.001"", sep = """"))"
"0","  } else {"
"0","    return(paste( ""X2 = "",round(chi_model$statistic,2), ""; p = "", round(chi_model$p.value,3), sep = """"))"
"0","  }"
"0","  "
"0","}"
"0",""
"0","# Function to create a text output for a emmeans model"
"0","report_emmeans <- function(mod_emmeans){"
"0","  post_hoc <- mod_emmeans"
"0","  if(colnames(post_hoc)[5] == ""t.ratio""){"
"0","    output <- data.frame(post_hoc$contrast)"
"0","    output$report <- paste(""t("", post_hoc$df,"") = "", round(post_hoc$t.ratio,2), ""; p "", sep = """")"
"0","    output$p <- post_hoc$p.value"
"0","    output$p <- ifelse(post_hoc$p.value < 0.001, ""<0.001"", paste(""= "",round(post_hoc$p.value,3)))"
"0","    output$report <- paste(output$report, output$p)"
"0","    output$p <- NULL"
"0","    return(output)"
"0","    } else if(colnames(post_hoc[5]) == ""z.ratio""){"
"0","    output <- data.frame(post_hoc$contrast)"
"0","    output$report <- paste(""z = "", round(post_hoc$z.ratio,2), ""; p"", sep = """")"
"0","    output$p <- post_hoc$p.value"
"0","    output$p <- ifelse(post_hoc$p.value < 0.001, ""<0.001"", paste(""= "", round(post_hoc$p.value,3), sep = """"))"
"0","    output$report <- paste(output$report, output$p)"
"0","    output$p <- NULL"
"0","    return(output)"
"0","    } else{"
"0","    print(""Unknown format, only results from z and t distributions are available"")"
"0","  }"
"0","  "
"0","}"
"0",""
"0","# Function to convert numbers to words --> 1 -> one"
"0","number_to_word <- function(number){"
"0","  if(number == 0){"
"0","    return(""zero"")"
"0","  } else if(number == 1){"
"0","    return(""one"")"
"0","  }else if(number == 2){"
"0","    return(""two"")"
"0","  } else if(number == 3){"
"0","    return(""three"")"
"0","  } else if(number == 4){"
"0","    return(""four"")"
"0","  } else if(number == 5){"
"0","    return(""five"")"
"0","  } else if(number == 6){"
"0","    return(""six"")"
"0","  } else if(number == 7){"
"0","    return(""seven"")"
"0","  } else if(number == 8){"
"0","    return(""eight"")"
"0","  } else if(number == 9){"
"0","    return(""nine"")"
"0","  } else if(number == 10){"
"0","    return(""ten"")"
"0","  } else if(number > 10 | number < 0){"
"0","    return(number)"
"0","  } "
"0","}"
"0",""
"0","# Function to create a text output for a glm model"
"0","report_glm <- function(glm_model){"
"0","  sum_glm <- summary(glm_model)"
"0","  sum_glm <- sum_glm$coefficients"
"0","  "
"0","  names_eff <- rownames(sum_glm)"
"0","  output <- data.frame(names_eff)"
"0","  "
"0","  output$report <- paste(""Z = "", round(sum_glm[,3],2), ""; p "", ifelse(round(sum_glm[,4],3) < 0.001, ""<0.001"", paste(""= "", round(sum_glm[,4],3), sep = """")), sep = """")"
"0","  output <- output[-1,]"
"0","  return(output)"
"0","}"
"0",""
"0","# Function to prepare the data to be entered in the first Random Forest model"
"0",""
"0","data_RF_outcome_single_tree <- function(data){"
"0","  "
"0","  library(dplyr)"
"0","  temp <- data%>%"
"0","    filter(res.1st.EEG != ""aucun"" )%>%"
"0","    filter(res.1st.EEG != ""aucun mais propose"" & res.1st.EEG != ""aucun mais  propose"")%>%"
"0","    filter(les.epi != ""aucun"" & res.IRM != ""aucun"" & res.IRM != ""aucun mais propose"")%>%"
"0","    filter(!is.na(dx.event),"
"0","           dx.event != ""Unknown"")%>%"
"0","    filter(type.epi.final == ""lesionnelle"" | type.epi.final == ""non lesionnelle"" | type.epi.final == ""generalisee idiopathique"" | is.na(type.epi.final))%>%"
"0","    filter(veille.sommeil != ""non documente"")%>%"
"0","    filter(status.neuro != ""aucun"" &  status.neuro != ""aucun mais propose"" & status.neuro != ""non documente"")%>%"
"0","    mutate(std_eeg = ifelse(res.1st.EEG == ""normal"", ""normal"", EEG.result_resume),"
"0","           std_eeg = case_when(pointes.1st.EEG == ""focale"" ~ ""focale"","
"0","                               pointes.1st.EEG == ""diffuse""~ ""diffuse"","
"0","                               pointes.1st.EEG != ""focale"" & pointes.1st.EEG != ""diffuse"" ~ std_eeg))%>%"
"0","    mutate(res.dx.final = dx.event)%>%"
"0","    mutate(res.dx.final = ifelse(res.dx.final == ""Epilepsy"", ""epilepsy"", ""non-epileptic""))%>%"
"0","    mutate(age = case_when(age >= 16 & age <= 25 ~ ""16_25"","
"0","                           age > 25 & age <= 35 ~ ""26_35"","
"0","                           age > 35 & age <= 45 ~ ""36_45"","
"0","                           age > 45 & age <= 55 ~ ""46_55"","
"0","                           age > 55 & age <= 65 ~ ""56_65"","
"0","                           age > 65 & age <= 75 ~ ""66_75"","
"0","                           age > 75 & age <= 85 ~ ""76_85"","
"0","                           age > 85 ~ ""85_plus""))%>%"
"0","    select(age, genre, atcd.famille, std_eeg, les.epi, status.neuro, veille.sommeil, res.dx.final)"
"0","  "
"0","  temp <- temp%>%"
"0","    dplyr::mutate(std_eeg = ifelse(std_eeg == ""focale"" | std_eeg == ""diffuse"", ""Spikes"", ""No spikes""),"
"0","                  atcd.famille = ifelse(atcd.famille == ""epilepsie"", ""Epilepsy"", ""other or none""),"
"0","                  les.epi = ifelse(les.epi == ""lesion epileptogene"", ""Epileptogenic lesion"", ""No lesion or probably not epileptogenic""),"
"0","                  age = case_when(age == ""16_25"" | age == ""26_35"" | age == ""36_45"" | age == ""46_55"" ~ ""<55"","
"0","                                  age == ""56_65"" | age == ""66_75"" | age == ""76_85"" | age == ""85_plus"" ~ "">55""),"
"0","                  status.neuro = ifelse(status.neuro == ""anormal"", ""Abnormal"", ""Normal or none""),"
"0","                  res.dx.final = case_when(res.dx.final == ""epilepsy"" ~ ""Epileptic"","
"0","                                           res.dx.final == ""non-epileptic"" ~ ""Non epileptic""))"
"0","  "
"0","  "
"0","  "
"0","  "
"0","  temp <- as.data.frame(temp)"
"0","  "
"0","  for (i in 1:ncol(temp)){"
"0","    temp[,i] <- factor(temp[,i])"
"0","  }"
"0","  "
"0","  data_RF <<- as.data.frame(temp)"
"0","  "
"0","  # Division in training and test dataframes"
"0","  "
"0","  train_index <- sample(nrow(temp), nrow(temp)*0.75)"
"0","  data_RF_train <<- temp[train_index,]"
"0","  data_RF_test <- temp[-train_index,]"
"0","  data_RF_test <<- data_RF_test[,1:ncol(data_RF_test)-1]"
"0","  "
"0","  labels_final <- temp[,ncol(temp)]"
"0","  "
"0","  temp_labels_final <- data%>%"
"0","    filter(res.1st.EEG != ""aucun"" )%>%"
"0","    filter(res.1st.EEG != ""aucun mais propose"" & res.1st.EEG != ""aucun mais  propose"")%>%"
"0","    filter(les.epi != ""aucun"" & res.IRM != ""aucun"" & res.IRM != ""aucun mais propose"")%>%"
"0","    filter(!is.na(dx.event),"
"0","           dx.event != ""Unknown"")%>%"
"0","    filter(type.epi.final == ""lesionnelle"" | type.epi.final == ""non lesionnelle"" | type.epi.final == ""generalisee idiopathique"" | is.na(type.epi.final))%>%"
"0","    filter(veille.sommeil != ""non documente"")%>%"
"0","    filter(status.neuro != ""aucun"" &  status.neuro != ""aucun mais propose"" & status.neuro != ""non documente"")%>%"
"0","    mutate(std_eeg = ifelse(res.1st.EEG == ""normal"", ""normal"", EEG.result_resume),"
"0","           std_eeg = case_when(pointes.1st.EEG == ""focale"" ~ ""focale"","
"0","                               pointes.1st.EEG == ""diffuse""~ ""diffuse"","
"0","                               pointes.1st.EEG != ""focale"" & pointes.1st.EEG != ""diffuse"" ~ std_eeg))%>%"
"0","    mutate(res.dx.final = dx.event)%>%"
"0","    mutate(res.dx.final = ifelse(res.dx.final == ""Epilepsy"", ""epilepsy"", ""non-epileptic""))%>%"
"0","    mutate(age = case_when(age >= 16 & age <= 25 ~ ""16_25"","
"0","                           age > 25 & age <= 35 ~ ""26_35"","
"0","                           age > 35 & age <= 45 ~ ""36_45"","
"0","                           age > 45 & age <= 55 ~ ""46_55"","
"0","                           age > 55 & age <= 65 ~ ""56_65"","
"0","                           age > 65 & age <= 75 ~ ""66_75"","
"0","                           age > 75 & age <= 85 ~ ""76_85"","
"0","                           age > 85 ~ ""85_plus""))%>%"
"0","    select(age, genre,  atcd.famille, std_eeg, les.epi, status.neuro,  veille.sommeil, res.dx.final)"
"0","  "
"0","  "
"0","  labels_final_train_RF <<- labels_final[train_index]"
"0","  labels_final_test_RF <<- labels_final[-train_index]"
"0","  "
"0","  labels_initial_train_RF <<- temp_labels_final[train_index,ncol(temp_labels_final)]"
"0","  labels_initial_test_RF <<- temp_labels_final[-train_index,ncol(temp_labels_final)]"
"0","  "
"0","  labels_initial_global <<- temp$res.dx.initial"
"0","  "
"0","}"
"0",""
"0","# Function to prepare the data to be entered in the second and third Random Forest models"
"0","data_RF_outcome_single_tree_LT <- function(data){"
"0","  "
"0","  library(dplyr)"
"0","  temp <- data%>%"
"0","    filter(res.1st.EEG != ""aucun"" )%>%"
"0","    filter(res.1st.EEG != ""aucun mais propose"" & res.1st.EEG != ""aucun mais  propose"")%>%"
"0","    filter(les.epi != ""aucun"" & res.IRM != ""aucun"" & res.IRM != ""aucun mais propose"")%>%"
"0","    filter(!is.na(dx.event),"
"0","           dx.event != ""Unknown"")%>%"
"0","    filter(type.epi.final == ""lesionnelle"" | type.epi.final == ""non lesionnelle"" | type.epi.final == ""generalisee idiopathique"" | is.na(type.epi.final))%>%"
"0","    filter(veille.sommeil != ""non documente"")%>%"
"0","    filter(res.lt.EEG != ""aucun"")%>%"
"0","    filter(res.lt.EEG != ""aucun mais propose"" & res.lt.EEG != ""aucun mais  propose"")%>%"
"0","    filter(status.neuro != ""aucun"" &  status.neuro != ""aucun mais propose"" & status.neuro != ""non documente"")%>%"
"0","    mutate(std_eeg = ifelse(res.1st.EEG == ""normal"", ""normal"", EEG.result_resume),"
"0","           std_eeg = case_when(pointes.1st.EEG == ""focale"" ~ ""focale"","
"0","                               pointes.1st.EEG == ""diffuse""~ ""diffuse"","
"0","                               pointes.1st.EEG != ""focale"" & pointes.1st.EEG != ""diffuse"" ~ std_eeg))%>%"
"0","    mutate(lt_eeg = ifelse(res.lt.EEG == ""normal"", ""normal"", EEG.lt.result_resume),"
"0","           lt_eeg = case_when(pointes.lt.EEG == ""focale"" ~ ""focale"","
"0","                               pointes.lt.EEG == ""diffuse""~ ""diffuse"","
"0","                               pointes.lt.EEG != ""focale"" & pointes.lt.EEG != ""diffuse"" ~ lt_eeg))%>%"
"0","    mutate(res.dx.final = dx.event)%>%"
"0","    mutate(res.dx.final = ifelse(res.dx.final == ""Epilepsy"", ""epilepsy"", ""non-epileptic""))%>%"
"0","    mutate(age = case_when(age >= 16 & age <= 25 ~ ""16_25"","
"0","                           age > 25 & age <= 35 ~ ""26_35"","
"0","                           age > 35 & age <= 45 ~ ""36_45"","
"0","                           age > 45 & age <= 55 ~ ""46_55"","
"0","                           age > 55 & age <= 65 ~ ""56_65"","
"0","                           age > 65 & age <= 75 ~ ""66_75"","
"0","                           age > 75 & age <= 85 ~ ""76_85"","
"0","                           age > 85 ~ ""85_plus""))%>%"
"0","    select(age, genre,  atcd.famille, std_eeg, lt_eeg, les.epi, status.neuro, veille.sommeil, res.dx.final)"
"0","  "
"0","  temp <- temp%>%"
"0","    dplyr::mutate(std_eeg = ifelse(std_eeg == ""focale"" | std_eeg == ""diffuse"", ""Spikes"", ""No spikes""),"
"0","                  lt_eeg = ifelse(lt_eeg == ""focale"" | lt_eeg == ""diffuse"", ""Spikes"", ""No spikes""),"
"0","                  atcd.famille = ifelse(atcd.famille == ""epilepsie"", ""Epilepsy"", ""other or none""),"
"0","                  les.epi = ifelse(les.epi == ""lesion epileptogene"", ""Epileptogenic lesion"", ""No lesion or probably not epileptogenic""),"
"0","                  age = case_when(age == ""16_25"" | age == ""26_35"" | age == ""36_45"" | age == ""46_55"" ~ ""<55"","
"0","                                  age == ""56_65"" | age == ""66_75"" | age == ""76_85"" | age == ""85_plus"" ~ "">55""),"
"0","                  status.neuro = ifelse(status.neuro == ""anormal"", ""Abnormal"", ""Normal or none""),"
"0","                  res.dx.final = case_when(res.dx.final == ""epilepsy"" ~ ""Epileptic"","
"0","                                           res.dx.final == ""non-epileptic"" ~ ""Non epileptic""))"
"0","  "
"0","  "
"0","  temp <- as.data.frame(temp)"
"0","  "
"0","  for (i in 1:ncol(temp)){"
"0","    temp[,i] <- factor(temp[,i])"
"0","  }"
"0","  "
"0","  data_RF <<- as.data.frame(temp)"
"0","  "
"0","  # Division in training and test dataframes"
"0","  "
"0","  train_index <- sample(nrow(temp), nrow(temp)*0.75)"
"0","  data_RF_train <<- temp[train_index,]"
"0","  data_RF_test <- temp[-train_index,]"
"0","  data_RF_test <<- data_RF_test[,1:ncol(data_RF_test)-1]"
"0","  "
"0","  labels_final <- temp[,ncol(temp)]"
"0","  "
"0","  temp_labels_final <- data%>%"
"0","    filter(res.1st.EEG != ""aucun"" )%>%"
"0","    filter(res.1st.EEG != ""aucun mais propose"" & res.1st.EEG != ""aucun mais  propose"")%>%"
"0","    filter(les.epi != ""aucun"" & res.IRM != ""aucun"" & res.IRM != ""aucun mais propose"")%>%"
"0","    filter(!is.na(dx.event),"
"0","           dx.event != ""Unknown"")%>%"
"0","    filter(type.epi.final == ""lesionnelle"" | type.epi.final == ""non lesionnelle"" | type.epi.final == ""generalisee idiopathique"" | is.na(type.epi.final))%>%"
"0","    filter(veille.sommeil != ""non documente"")%>%"
"0","    filter(res.lt.EEG != ""aucun"")%>%"
"0","    filter(res.lt.EEG != ""aucun mais propose"" & res.lt.EEG != ""aucun mais  propose"")%>%"
"0","    filter(status.neuro != ""aucun"" &  status.neuro != ""aucun mais propose"" & status.neuro != ""non documente"")%>%"
"0","    mutate(std_eeg = ifelse(res.1st.EEG == ""normal"", ""normal"", EEG.result_resume),"
"0","           std_eeg = case_when(pointes.1st.EEG == ""focale"" ~ ""focale"","
"0","                               pointes.1st.EEG == ""diffuse""~ ""diffuse"","
"0","                               pointes.1st.EEG != ""focale"" & pointes.1st.EEG != ""diffuse"" ~ std_eeg))%>%"
"0","    mutate(lt_eeg = ifelse(res.lt.EEG == ""normal"", ""normal"", EEG.lt.result_resume),"
"0","           lt_eeg = case_when(pointes.lt.EEG == ""focale"" ~ ""focale"","
"0","                              pointes.lt.EEG == ""diffuse""~ ""diffuse"","
"0","                              pointes.lt.EEG != ""focale"" & pointes.lt.EEG != ""diffuse"" ~ lt_eeg))%>%"
"0","    mutate(res.dx.final = dx.event)%>%"
"0","    mutate(res.dx.final = ifelse(res.dx.final == ""Epilepsy"", ""epilepsy"", ""non-epileptic""))%>%"
"0","    mutate(age = case_when(age >= 16 & age <= 25 ~ ""16_25"","
"0","                           age > 25 & age <= 35 ~ ""26_35"","
"0","                           age > 35 & age <= 45 ~ ""36_45"","
"0","                           age > 45 & age <= 55 ~ ""46_55"","
"0","                           age > 55 & age <= 65 ~ ""56_65"","
"0","                           age > 65 & age <= 75 ~ ""66_75"","
"0","                           age > 75 & age <= 85 ~ ""76_85"","
"0","                           age > 85 ~ ""85_plus""))%>%"
"0","    select(age, genre,atcd.famille, std_eeg, lt_eeg, les.epi, status.neuro, veille.sommeil, res.dx.final)"
"0","  "
"0","  temp_labels_final <- temp_labels_final%>%"
"0","    dplyr::mutate(std_eeg = ifelse(std_eeg == ""focale"" | std_eeg == ""diffuse"", ""Spikes"", ""No spikes""),"
"0","                  lt_eeg = ifelse(lt_eeg == ""focale"" | lt_eeg == ""diffuse"", ""Spikes"", ""No spikes""),"
"0","                  atcd.famille = ifelse(atcd.famille == ""epilepsie"", ""Epilepsy"", ""other or none""),"
"0","                  les.epi = ifelse(les.epi == ""lesion epileptogene"", ""Epileptogenic lesion"", ""No lesion or probably not epileptogenic""),"
"0","                  age = case_when(age == ""16_25"" | age == ""26_35"" | age == ""36_45"" | age == ""46_55"" ~ ""<55"","
"0","                                  age == ""56_65"" | age == ""66_75"" | age == ""76_85"" | age == ""85_plus"" ~ "">55""),"
"0","                  status.neuro = ifelse(status.neuro == ""anormal"", ""Abnormal"", ""Normal or none""),"
"0","                  res.dx.final = case_when(res.dx.final == ""epilepsy"" ~ ""Epileptic"","
"0","                                           res.dx.final == ""non-epileptic"" ~ ""Non epileptic""))"
"0","  "
"0","  labels_final_train_RF <<- labels_final[train_index]"
"0","  labels_final_test_RF <<- labels_final[-train_index]"
"0","  "
"0","  labels_initial_train_RF <<- temp_labels_final[train_index,ncol(temp_labels_final)]"
"0","  labels_initial_test_RF <<- temp_labels_final[-train_index,ncol(temp_labels_final)]"
"0","  "
"0","  labels_initial_global <<- temp$res.dx.initial"
"0","  "
"0","}"
"0",""
